version: '3.4'

services:

  producer: &app
    container_name: producer
    image: "sample_app:latest"
    build:
      context: .
      dockerfile: builders/docker/Dockerfile
    entrypoint: ["./items_producer"]
#    env_file:
#      - ./builders/docker/.env
    ports:
      - 8080:${HTTP_PORT}
    depends_on:
      - postgres
      - rabbitmq
      - processor

  processor:
    <<: *app
    container_name: processor
    entrypoint: ["./items_processor"]
    ports:
      - 8081:${HTTP_PORT}
    depends_on:
      - postgres
      - rabbitmq

  postgres:
    container_name: database
    image: "postgres:15-alpine"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 3000M
    healthcheck:
      test: pg_isready -U ${DB_USER}
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - ${DB_PORT}:5432
    expose:
      - "5432"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.9-management-alpine
    healthcheck:
      test: rabbitmq-diagnostics -q status && rabbitmq-diagnostics -q check_local_alarms
      interval: 60s
      timeout: 30s
      retries: 3
    ports:
      - "5672:5672"
      - "15672:15672"

#  redis:
#    container_name: redis
#    image: "redis:7.0.5"
#    ports:
#      - ${CACHE_PORT}:6379
#    environment:
#      - ALLOW_EMPTY_PASSWORD=yes
